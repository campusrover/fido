(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return s},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),d=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=d(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,l=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=d(r),m=o,f=c["".concat(p,".").concat(m)]||c[m]||u[m]||l;return r?n.createElement(f,a(a({ref:t},s),{},{components:r})):n.createElement(f,a({ref:t},s))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=r.length,a=new Array(l);a[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var d=2;d<l;d++)a[d]=r[d];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},2181:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return a},metadata:function(){return i},toc:function(){return p},default:function(){return s}});var n=r(2122),o=r(9756),l=(r(7294),r(3905)),a={sidebar_label:"world",title:"fido.world.world"},i={unversionedId:"reference/fido/world/world",id:"reference/fido/world/world",isDocsHomePage:!1,title:"fido.world.world",description:"World",source:"@site/docs/reference/fido/world/world.md",sourceDirName:"reference/fido/world",slug:"/reference/fido/world/world",permalink:"/fido/docs/reference/fido/world/world",editUrl:"https://github.com/hojulian/fido/edit/documentation/docs/docs/reference/fido/world/world.md",version:"current",sidebar_label:"world",frontMatter:{sidebar_label:"world",title:"fido.world.world"},sidebar:"apiSidebar",previous:{title:"fido.world.racetrack",permalink:"/fido/docs/reference/fido/world/racetrack"},next:{title:"fido.config",permalink:"/fido/docs/reference/fido/config"}},p=[{value:"World",id:"world",children:[{value:"add",id:"add",children:[]},{value:"prepare_robots",id:"prepare_robots",children:[]},{value:"set_simulation",id:"set_simulation",children:[]},{value:"remove",id:"remove",children:[]},{value:"robots",id:"robots",children:[]},{value:"ros",id:"ros",children:[]},{value:"export_files",id:"export_files",children:[]}]}],d={toc:p};function s(e){var t=e.components,r=(0,o.Z)(e,["components"]);return(0,l.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"world"},"World"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class World(ABC,  WorldProtocol)\n")),(0,l.kt)("p",null,"Represents a world."),(0,l.kt)("p",null,"Currently this is only compatible with Gazebo."),(0,l.kt)("h3",{id:"add"},"add"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},' | def add(robot: "Robot", x: float = 0.0, y: float = 0.0, z: float = 0.0) -> None\n')),(0,l.kt)("p",null,"Add a robot to the world."),(0,l.kt)("p",null,"Internally, this will create the corresponding launch file instructions for\nstarting the given robot. The robot dependencies are added to the ",(0,l.kt)("inlineCode",{parentName:"p"},".rosinstall"),"\nfile."),(0,l.kt)("p",null,"Once the files are added, the world is added to the robot as a parent."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"robot")," ",(0,l.kt)("em",{parentName:"li"},"Robot")," - Robot to be added."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"x")," ",(0,l.kt)("em",{parentName:"li"},"float")," - X position in the world."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"y")," ",(0,l.kt)("em",{parentName:"li"},"float")," - Y position in the world."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"z")," ",(0,l.kt)("em",{parentName:"li"},"float")," - Z position in the world.")),(0,l.kt)("h3",{id:"prepare_robots"},"prepare","_","robots"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"}," | def prepare_robots() -> None\n")),(0,l.kt)("p",null,"Prepare prepares all the robots in the world."),(0,l.kt)("h3",{id:"set_simulation"},"set","_","simulation"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},' | def set_simulation(simulation: "Simulation") -> None\n')),(0,l.kt)("p",null,"Set the parent simulation."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"simulation")," ",(0,l.kt)("em",{parentName:"li"},"Simulation")," - Parent simulation.")),(0,l.kt)("h3",{id:"remove"},"remove"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},' | def remove(robot: "Robot") -> None\n')),(0,l.kt)("p",null,"Remove a robot from the world."),(0,l.kt)("p",null,"Internally, this is converted into a gazebo_ros delete_model\ncall."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"robot")," ",(0,l.kt)("em",{parentName:"li"},"Robot")," - Robot to be removed.")),(0,l.kt)("h3",{id:"robots"},"robots"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},' | def robots() -> List["Robot"]\n')),(0,l.kt)("p",null,"Returns a list of robots."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),":"),(0,l.kt)("p",null,"  The list of robots in this world."),(0,l.kt)("h3",{id:"ros"},"ros"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},' | def ros() -> "Ros"\n')),(0,l.kt)("p",null,"Return internal ROS client."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),":"),(0,l.kt)("p",null,"  The ROS client."),(0,l.kt)("h3",{id:"export_files"},"export","_","files"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"}," | def export_files(path: str, package: str, rosbridge_port: int) -> None\n")),(0,l.kt)("p",null,"Export files to a given file."),(0,l.kt)("p",null,"Internally, ",(0,l.kt)("inlineCode",{parentName:"p"},".rosinstall")," file is exported to the root of the directory.\nThe launch file is exported to $PATH/src/$PACKAGE/launch."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"path")," ",(0,l.kt)("em",{parentName:"li"},"str")," - Path to export files."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"package")," ",(0,l.kt)("em",{parentName:"li"},"str")," - Name of simulation package. Name should only contains\nalphanumeric characters and underscores. Normally named as\n",(0,l.kt)("inlineCode",{parentName:"li"},"fido_simulation"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"rosbridge_port")," ",(0,l.kt)("em",{parentName:"li"},"int")," - Port number of rosbridge.")))}s.isMDXComponent=!0}}]);