(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2604],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,f=d["".concat(p,".").concat(m)]||d[m]||c[m]||l;return n?r.createElement(f,i(i({ref:t},s),{},{components:n})):r.createElement(f,i({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var u=2;u<l;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6083:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return o},toc:function(){return p},default:function(){return s}});var r=n(2122),a=n(9756),l=(n(7294),n(3905)),i={sidebar_label:"launchfile",title:"fido.ros.launchfile"},o={unversionedId:"reference/fido/ros/launchfile",id:"reference/fido/ros/launchfile",isDocsHomePage:!1,title:"fido.ros.launchfile",description:"LaunchFile",source:"@site/docs/reference/fido/ros/launchfile.md",sourceDirName:"reference/fido/ros",slug:"/reference/fido/ros/launchfile",permalink:"/fido/docs/reference/fido/ros/launchfile",editUrl:"https://github.com/hojulian/fido/edit/documentation/docs/docs/reference/fido/ros/launchfile.md",version:"current",sidebar_label:"launchfile",frontMatter:{sidebar_label:"launchfile",title:"fido.ros.launchfile"},sidebar:"apiSidebar",previous:{title:"fido.ros.installfile",permalink:"/fido/docs/reference/fido/ros/installfile"},next:{title:"fido.ros.protocol",permalink:"/fido/docs/reference/fido/ros/protocol"}},p=[{value:"LaunchFile",id:"launchfile",children:[{value:"include",id:"include",children:[]},{value:"node",id:"node",children:[]},{value:"param",id:"param",children:[]},{value:"to_string",id:"to_string",children:[]},{value:"to_file",id:"to_file",children:[]}]}],u={toc:p};function s(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,l.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"launchfile"},"LaunchFile"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class LaunchFile(object)\n")),(0,l.kt)("p",null,"Represents a ROS launch file builder."),(0,l.kt)("p",null,"Currently supported tags: include, node, and param."),(0,l.kt)("p",null,"For details about the XML format used by LaunchFile,\nsee ",(0,l.kt)("a",{parentName:"p",href:"http://wiki.ros.org/roslaunch/XML"},"http://wiki.ros.org/roslaunch/XML"),"."),(0,l.kt)("h3",{id:"include"},"include"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"}," | def include(file: str, args: Mapping[str, str] = {}, envs: Mapping[str, str] = {}) -> None\n")),(0,l.kt)("p",null,"Add an ",(0,l.kt)("inlineCode",{parentName:"p"},"&lt;include&gt;")," tag to launch file."),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"&lt;include&gt;")," tag enables you to import another roslaunch XML file into the\ncurrent file."),(0,l.kt)("p",null,"See ",(0,l.kt)("a",{parentName:"p",href:"http://wiki.ros.org/roslaunch/XML/include"},"http://wiki.ros.org/roslaunch/XML/include")," for more details."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"file")," ",(0,l.kt)("em",{parentName:"li"},"str")," - Name of file to include."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"args")," ",(0,l.kt)("em",{parentName:"li"},"dict")," - Pass argument(s) to the included file."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"envs")," ",(0,l.kt)("em",{parentName:"li"},"dict")," - Set environment variables on across the entire included file.")),(0,l.kt)("h3",{id:"node"},"node"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"}," | def node(pkg: str, node_type: str, name: str, args: Mapping[str, Any] = {}) -> None\n")),(0,l.kt)("p",null,"Add an ",(0,l.kt)("inlineCode",{parentName:"p"},"&lt;node&gt;")," tag to launch file."),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"&lt;node&gt;")," tag specifies a ROS node that you wish to have launched. This is\nthe most common roslaunch tag as it supports the most important features:\nbringing up and taking down nodes."),(0,l.kt)("p",null,"See ",(0,l.kt)("a",{parentName:"p",href:"http://wiki.ros.org/roslaunch/XML/node"},"http://wiki.ros.org/roslaunch/XML/node")," for more details."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pkg")," ",(0,l.kt)("em",{parentName:"li"},"str")," - package of node."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"node_type")," ",(0,l.kt)("em",{parentName:"li"},"str")," - Node type. There must be a corresponding executable with\nthe same name."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"name")," ",(0,l.kt)("em",{parentName:"li"},"str")," - Node name. Note that ",(0,l.kt)("inlineCode",{parentName:"li"},"name")," cannot contain a namespace. Use the\nns attribute instead."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"args")," ",(0,l.kt)("em",{parentName:"li"},"dict")," - Pass arguments to node.")),(0,l.kt)("h3",{id:"param"},"param"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"}," | def param(name: str, command: str) -> None\n")),(0,l.kt)("p",null,"Add an ",(0,l.kt)("inlineCode",{parentName:"p"},"&lt;param&gt;")," tag to launch file."),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"&lt;param&gt;")," tag defines a parameter to be set on the Parameter Server."),(0,l.kt)("p",null,"See ",(0,l.kt)("a",{parentName:"p",href:"http://wiki.ros.org/roslaunch/XML/param"},"http://wiki.ros.org/roslaunch/XML/param")," for more details."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"name")," ",(0,l.kt)("em",{parentName:"li"},"str")," - Parameter name. Namespaces can be included in the parameter\nname, but globally specified names should be avoided."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"command")," ",(0,l.kt)("em",{parentName:"li"},"str")," - The output of the command will be read and stored as a\nstring. It is strongly recommended that you use the package-relative\n",(0,l.kt)("inlineCode",{parentName:"li"},"$(find)/file.txt")," syntax to specify file arguments. You should also\nquote file arguments using single quotes due to XML escaping\nrequirements.")),(0,l.kt)("h3",{id:"to_string"},"to","_","string"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"}," | def to_string() -> str\n")),(0,l.kt)("p",null,"Output file content in string."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),":"),(0,l.kt)("p",null,"  File content in string form."),(0,l.kt)("h3",{id:"to_file"},"to","_","file"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"}," | def to_file(path: str) -> None\n")),(0,l.kt)("p",null,"Output file content to a file in a given path."),(0,l.kt)("p",null,"The output file is located in $PATH/$NAME.launch."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"path")," ",(0,l.kt)("em",{parentName:"li"},"str")," - Path where the file is output to.")))}s.isMDXComponent=!0}}]);