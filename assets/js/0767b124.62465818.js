(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5723],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return s},kt:function(){return u}});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},l=Object.keys(e);for(o=0;o<l.length;o++)r=l[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)r=l[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var d=o.createContext({}),c=function(e){var t=o.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=c(e.components);return o.createElement(d.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,d=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=c(r),u=n,m=p["".concat(d,".").concat(u)]||p[u]||f[u]||l;return r?o.createElement(m,a(a({ref:t},s),{},{components:r})):o.createElement(m,a({ref:t},s))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,a=new Array(l);a[0]=p;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:n,a[1]=i;for(var c=2;c<l;c++)a[c]=r[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}p.displayName="MDXCreateElement"},9048:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return a},metadata:function(){return i},toc:function(){return d},default:function(){return s}});var o=r(2122),n=r(9756),l=(r(7294),r(3905)),a={sidebar_label:"model",title:"fido.robot.model.model"},i={unversionedId:"reference/fido/robot/model/model",id:"reference/fido/robot/model/model",isDocsHomePage:!1,title:"fido.robot.model.model",description:"Model Objects",source:"@site/docs/reference/fido/robot/model/model.md",sourceDirName:"reference/fido/robot/model",slug:"/reference/fido/robot/model/model",permalink:"/fido/docs/reference/fido/robot/model/model",editUrl:"https://github.com/hojulian/fido/edit/documentation/docs/docs/reference/fido/robot/model/model.md",version:"current",sidebar_label:"model",frontMatter:{sidebar_label:"model",title:"fido.robot.model.model"},sidebar:"apiSidebar",previous:{title:"fido.dtypes.dtypes",permalink:"/fido/docs/reference/fido/dtypes/dtypes"},next:{title:"fido.robot.model.stack",permalink:"/fido/docs/reference/fido/robot/model/stack"}},d=[{value:"Model Objects",id:"model-objects",children:[]}],c={toc:d};function s(e){var t=e.components,r=(0,n.Z)(e,["components"]);return(0,l.kt)("wrapper",(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"model-objects"},"Model Objects"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Model(object)\n")),(0,l.kt)("p",null,"Represents a model that describes a robot."),(0,l.kt)("p",null,"This is very similar to ROS\u2019s tf tree. A model is created using a\n",(0,l.kt)("inlineCode",{parentName:"p"},"fido.robot.model.Stack"),". Currently, the only way to create a valid\nmodel is to use ",(0,l.kt)("inlineCode",{parentName:"p"},"fido.robot.model.Stack.model()"),"."),(0,l.kt)("h4",{id:"ros_urdf"},"ros","_","urdf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"}," | ros_urdf(path)\n")),(0,l.kt)("p",null,"Export a ROS compatible URDF representation of the robot."),(0,l.kt)("p",null,"Internally, when converting the model to a URDF, this method\nfirst converts the model\u2019s stack into ",(0,l.kt)("inlineCode",{parentName:"p"},"ros/urdf_parser_py"),"\u2019s\nurdf nodes. Then, once a new tree of urdf nodes is created, it\ncalls to_xml to convert into a URDF file at the given path."),(0,l.kt)("h4",{id:"from_ros_urdf"},"from","_","ros","_","urdf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"from_ros_urdf(path)\n")),(0,l.kt)("p",null,"Read and parse a ROS URDF file as ",(0,l.kt)("inlineCode",{parentName:"p"},"fido.robot.model.Model"),"."))}s.isMDXComponent=!0}}]);